class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> list = new ArrayList<>();
        Helper("", 0, 0, n, list);
        return list;
    }

    private void Helper(String  current, int open, int close, int n, List<String> list){
        //Base Case
        if(current.length() == 2 * n){
            list.add(current);
        }

        if(open < n){
            Helper(current + '(', open + 1, close, n, list);
        }

        if(close < open){
            Helper(current + ')', open, close + 1, n, list);
        }
    }
}
