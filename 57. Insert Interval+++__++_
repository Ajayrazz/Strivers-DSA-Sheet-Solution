class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        int i = 0;
        int n = intervals.length;

        ArrayList<int[]> result = new ArrayList<>();
        //iterating the left interval and storing into result
        while(i < n && intervals[i][1] < newInterval[0]){
            result.add(intervals[i]);
            i++;
        }

        //iterating the middle interval
        while(i < n && intervals[i][0] <= newInterval[1]){
            newInterval[0] = Math.min(newInterval[0], intervals[i][0]);
            newInterval[1] = Math.max(newInterval[1], intervals[i][1]);
            i++;
        }
        result.add(newInterval);

        //iterating the right interval and store it to result
        while(i < n){
            result.add(intervals[i]);
            i++;
        }

        //converting the ArrayList to 2D array and return it
        return result.toArray(new int[result.size()][]);
    }
}
