/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        //list to store the element of linkedlist
        List<Integer> list = new ArrayList<>();
        //iterate the lists
        for(int i = 0; i < lists.length; i++){
            ListNode current = lists[i];
            //iterate the current
            while(current != null){
                list.add(current.val);
                current = current.next;
            }
        }

        //sort
        Collections.sort(list);

        //make linkedlist
        ListNode dummy = new ListNode(0);
        ListNode temp = dummy;

        //iterate list
        for(int num : list){
            temp.next = new ListNode(num);
            temp = temp.next;
        }

        return dummy.next;
    }
}
