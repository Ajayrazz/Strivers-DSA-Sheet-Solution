class Solution {
    private ListNode head;
    private Random rand;

    public Solution(ListNode head) {
        this.head = head;
        this.rand = new Random();
    }
    
    public int getRandom() {
        int result = -1;
        int count = 0;
        ListNode current = head;

        while (current != null) {
            count++;
            // With probability 1/count, choose the current node
            if (rand.nextInt(count) == 0) {
                result = current.val;
            }
            current = current.next;
        }
        return result;
    }
}

// Constructor: Time O(1), Space O(1)
// getRandom(): Time O(n), Space O(1)
