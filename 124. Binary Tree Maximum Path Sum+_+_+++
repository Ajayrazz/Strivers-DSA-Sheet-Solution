/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int max_path_sum = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        //base case
        if(root == null) return 0;
        Helper(root);
        return max_path_sum;
    }

    public int Helper(TreeNode root){
        //base case
        if(root == null) return 0;
        int left_val = Math.max(0, Helper(root.left));
        int right_val = Math.max(0, Helper(root.right));

        //update the max_path_sum
        max_path_sum = Math.max(max_path_sum, (left_val + right_val + root.val));

        return Math.max(left_val, right_val) + root.val;
    }
}
