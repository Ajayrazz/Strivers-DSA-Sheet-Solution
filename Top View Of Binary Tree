import java.util.*;

// class TreeNode {
//     int data;
//     TreeNode left;
//     TreeNode right;

//     TreeNode(int data) {
//         this.data = data;
//         this.left = null;
//         this.right = null;
//     }
// }

public class Solution {
    static class Pair {
        TreeNode node;
        int hd;

        Pair(TreeNode node, int hd) {
            this.node = node;
            this.hd = hd;
        }
    }

    public static List<Integer> getTopView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if (root == null) return result;

        Map<Integer, Integer> map = new TreeMap<>();
        Queue<Pair> queue = new LinkedList<>();

        queue.add(new Pair(root, 0));

        while (!queue.isEmpty()) {
            Pair curr = queue.poll();
            TreeNode node = curr.node;
            int line = curr.hd;

            // First time visiting this horizontal distance
            if (!map.containsKey(line)) {
                map.put(line, node.data);
            }

            if (node.left != null) {
                queue.add(new Pair(node.left, line - 1));
            }

            if (node.right != null) {
                queue.add(new Pair(node.right, line + 1));
            }
        }

        result.addAll(map.values());
        return result;
    }
}
