/****************************************************************

Following is the class structure of the Node class:

class Node {
    public int data;
    public Node next;

    Node() {
        this.data = 0;
        this.next = null;
    }

    Node(int data) {
        this.data = data;
        this.next = null;
    }

    Node(int data, Node next) {
        this.data = data;
        this.next = next;
    }
}

*****************************************************************/

public class Solution
{
    public static Node sortList(Node head) {
        // Dummy nodes for 0s, 1s, 2s lists
        Node zeroD = new Node(-1), oneD = new Node(-1), twoD = new Node(-1);
        // Current tails for the three lists
        Node zero = zeroD, one = oneD, two = twoD;
        
        // Partition list into 0s, 1s, 2s
        Node curr = head;
        while (curr != null) {
            if (curr.data == 0) {
                zero.next = curr;
                zero = zero.next;
            } else if (curr.data == 1) {
                one.next = curr;
                one = one.next;
            } else { // curr.data == 2
                two.next = curr;
                two = two.next;
            }
            curr = curr.next;
        }

        // Connect the three lists
        zero.next = (oneD.next != null) ? oneD.next : twoD.next;
        one.next = twoD.next;
        two.next = null; // End of final list

        // New head is after dummy node zeroD
        return zeroD.next;
    }
}
