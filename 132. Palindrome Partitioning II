class Solution {

    //function for palindrome
    private boolean isPalindrome(String s, int i, int j){
        while(i < j){
            if(s.charAt(i) != s.charAt(j)){
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

    //Helper function
    private int helper(String s, int i, int n, int[] dp){
        if(i == n) return 0;
        if(dp[i] != -1) return dp[i];
        int min = Integer.MAX_VALUE;
        for(int j = i; j < n; j++){
            if(isPalindrome(s, i, j)){
                min = Math.min(min, 1 + helper(s, j + 1, n, dp));
            }
        }
        return dp[i] = min;
    }

    public int minCut(String s) {
        int n = s.length();
        //case 1
        if(isPalindrome(s, 0, n - 1)) return 0;
        int[] dp = new int[n];
        Arrays.fill(dp, -1);
        return helper(s, 0, n, dp) - 1;
    }
}
