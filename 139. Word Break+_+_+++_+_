class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        int n = s.length();
        //add the word of wordDict to Set
        Set<String> set = new HashSet<>();
        for(String word : wordDict){
            set.add(word);
        }

        int max_length = 0;
        for(String word : wordDict){
            max_length = Math.max(max_length, word.length());
        }

        boolean[] dp = new boolean[n + 1];
        dp[0] = true;

        for(int i = 1; i <= n; i++){
            for(int j = i - 1; j >= Math.max(0, i - max_length); j--){
                if(dp[j] && set.contains(s.substring(j, i))){
                    dp[i] = true;
                    break;
                }
            }
        }

        return dp[n];
    }
}
