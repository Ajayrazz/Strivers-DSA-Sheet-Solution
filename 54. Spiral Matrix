class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> list = new ArrayList<>();

        int startrow = 0;
        int startcol = 0;
        int endrow = matrix.length - 1;
        int endcol = matrix[0].length - 1;

        while(startrow <= endrow && startcol <= endcol){
            //iterating top
            for(int j = startcol; j <= endcol; j++){
                list.add(matrix[startrow][j]);
            }

            //iterating right
            for(int i = startrow + 1; i <= endrow; i++){
                list.add(matrix[i][endcol]);
            }

            //iterating bottom
            for(int j = endcol - 1; j >= startcol; j--){
                if(startrow == endrow){
                    break;
                }
                list.add(matrix[endrow][j]);
            }

            //iterating left
            for(int i = endrow - 1; i > startrow; i--){
                if(startcol == endcol){
                    break;
                }
                list.add(matrix[i][startcol]);
            }

            startrow++;
            endrow--;
            startcol++;
            endcol--;
        }

        return list;
    }
}
