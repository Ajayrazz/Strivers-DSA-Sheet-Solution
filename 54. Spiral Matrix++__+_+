class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
         int startRow = 0;
         int startCol = 0;
         int endRow = matrix.length - 1;
         int endCol = matrix[0].length - 1;

         List<Integer> result = new ArrayList<>();
         while(startRow <= endRow && startCol <= endCol){
            //iterate the top
            for(int j = startCol; j <= endCol; j++){
                result.add(matrix[startRow][j]);
            }

            //iterate the right
            for(int i = startRow + 1; i <= endRow; i++){
                result.add(matrix[i][endCol]);
            }

            //iterate the bottom
            for(int j = endCol - 1; j >= startCol; j--){
                //edge case
                if(startRow == endRow){
                    break;
                }
                result.add(matrix[endRow][j]);
            }

            //iterate the left
            for(int i = endRow - 1; i > startRow; i--){
                if(startCol == endCol){
                    break;
                }
                result.add(matrix[i][startCol]);
            }

            startRow++;
            startCol++;
            endRow--;
            endCol--;
         }

         return result;
    }
}
