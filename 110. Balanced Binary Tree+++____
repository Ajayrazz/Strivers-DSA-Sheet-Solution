/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        //base case
        if(root == null) return true;

        return Helper(root) != -1;
    }

    //Helper Function To Check Whether Binary Tree Is Balanced Or Not
    public int Helper(TreeNode root){
        //base case
        if(root == null) return 0;

        //iterate the left and right subtree
        int left = Helper(root.left);
        int right = Helper(root.right);

        if(left == -1 || right == -1){
            return -1;
        }

        if(Math.abs(left - right) > 1){
            return -1;
        }

        return Math.max(left, right) + 1;
    }
}
