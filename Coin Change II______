class Solution {
    public int change(int amount, int[] coins) {
        int[][] dp = new int[coins.length][amount + 1];
        for(int[] row : dp){
            Arrays.fill(row, -1);
        }
        return changeUtil(coins.length - 1, amount, coins, dp);
    }

    //changeUtil function
    public int changeUtil(int index, int amount, int[] coins, int[][] dp){
        //case 1
        if(index == 0){
            if(amount % coins[index] == 0) return 1;
            return 0;
        }
        //case 2
        if(dp[index][amount] != -1){
            return dp[index][amount];
        }

        int notTake = changeUtil(index - 1, amount, coins, dp);
        int take = 0;
        if(coins[index] <= amount){
            take = changeUtil(index, amount - coins[index], coins, dp);
        }
        //update dp
        return dp[index][amount] = take + notTake;
    }
}
