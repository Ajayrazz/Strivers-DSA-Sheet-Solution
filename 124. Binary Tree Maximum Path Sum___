/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    //global variable to store the maximum path sum
    public int max_PathSum = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        if(root == null) return 0;
        Helper(root);
        return max_PathSum;
    }

    private int Helper(TreeNode root){
        if(root == null){
            return 0;
        }

        int leftSum = Math.max(0, Helper(root.left));
        int rightSum = Math.max(0, Helper(root.right));

        max_PathSum = Math.max(max_PathSum, leftSum + rightSum + root.val);

        return Math.max(leftSum, rightSum) + root.val;
    }
}
