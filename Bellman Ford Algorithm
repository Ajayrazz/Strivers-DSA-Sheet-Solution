// User function Template for Java

class Solution {
    public int[] bellmanFord(int V, int[][] edges, int src) {
        // code here
        //step 1
        int[] dist = new int[V];
        Arrays.fill(dist, (int) 1e8);
        dist[src] = 0;
        
        //step 2 : Relax all edge V - 1 times
        for(int i = 1; i <= V - 1; i++){
            for(int[] edge : edges){
                int u = edge[0];
                int v = edge[1];
                int w = edge[2];
                
                if(dist[u] != (int) 1e8 && dist[u] + w < dist[v]){
                    dist[v] = w + dist[u];
                }
            }
        }
        
        //step 3 : check for the negative weight cycle
        for(int[] edge : edges){
            int u = edge[0];
            int v = edge[1];
            int w = edge[2];
            
            if(dist[u] != (int) 1e8 && dist[u] + w < dist[v]){
                return new int[]{-1};
            }
        }
        
        return dist;
    }
}
