/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    //variable to store the maximum path sum value
    public int maxpath_sum = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        //base case
        if(root == null){
            return 0;
        }

        helper(root);
        return maxpath_sum;
    }

    //Helper function to calculate the maximum path sum
    private int helper(TreeNode root){
        //base case
        if(root == null){
            return 0;
        }

        int left_sum = Math.max(0, helper(root.left));
        int right_sum = Math.max(0, helper(root.right));

        //update the maxpath_sum
        maxpath_sum = Math.max(maxpath_sum, left_sum + right_sum + root.val);

        return Math.max(left_sum, right_sum) + root.val;
    }
}
