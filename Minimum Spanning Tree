// User function Template for Java
class Pair {
    int node;
    int distance;
    public Pair(int distance, int node){
        this.node = node;
        this.distance = distance;
    }
}

class Solution {
    static int spanningTree(int V, int E, List<List<int[]>> adj) {
        // Code Here.
        PriorityQueue<Pair> pq = new PriorityQueue<Pair>((x, y) -> x.distance - y.distance);
        
        int[] visited = new int[V];
        //{weight, node}
        pq.add(new Pair(0, 0));
        int sum = 0;
        
        while(pq.size() != 0){
            int wt = pq.peek().distance;
            int node = pq.peek().node;
            pq.remove();
            
            if(visited[node] == 1){
                continue;
            }
            visited[node] = 1;
            sum += wt;
            
            for(int i = 0; i < adj.get(node).size(); i++){
                int edW = adj.get(node).get(i)[1];
                int adjNode = adj.get(node).get(i)[0];
                
                if(visited[adjNode] == 0){
                    pq.add(new Pair(edW, adjNode));
                }
            }
        }
        return sum;
    }
}
