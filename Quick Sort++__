import java.util.* ;
import java.io.*; 
public class Solution {
    public static List<Integer> quickSort(List<Integer> arr){
        // Write your code here.
        int n = arr.size();
        //call the function for quick sort
        quickSort(arr, 0, n - 1);

        return arr;
    }

    //Function For Quick Sort
    public static void quickSort(List<Integer> arr, int low, int high){
        if(low < high){
            int pIndex = partition(arr, low, high);
            //recall the function
            quickSort(arr, low, pIndex - 1);
            quickSort(arr, pIndex + 1, high);
        }
    }

    //Helper Function For Quick Sort
    public static int partition(List<Integer> arr, int low, int high){
        int pivot = arr.get(low);
        int i = low;
        int j = high;

        while(i < j){
            while(arr.get(i) <= pivot && i <= high - 1){
                i++;
            }

            while(arr.get(j) > pivot && j >= low + 1){
                j--;
            }

            if (i < j) {
                int temp = arr.get(i);
                arr.set(i, arr.get(j));
                arr.set(j, temp);
            }
        }

        int temp = arr.get(low);
        arr.set(low, arr.get(j));
        arr.set(j, temp);
        return j;
    }
}
